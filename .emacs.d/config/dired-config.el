(defun shell-instead-dired ()
  (interactive)
  (let ((dired-buffer (current-buffer)))
	(eshell (concat default-directory "-eshell"))
	(kill-buffer dired-buffer)
	(delete-other-windows)))

(define-key evil-normal-state-map (kbd "d") 'dired)

(add-hook 'dired-mode-hook
		  (lambda ()
			(local-set-key (kbd "<") nil)
			(local-set-key (kbd ">") nil)
			(local-set-key (kbd "A") nil)
			(local-set-key (kbd "B") nil)
			(local-set-key (kbd "C") nil)
			(local-set-key (kbd "D") nil)
			(local-set-key (kbd "E") nil)
			(local-set-key (kbd "F") nil)
			(local-set-key (kbd "G") nil)
			(local-set-key (kbd "H") nil)
			(local-set-key (kbd "I") nil)
			(local-set-key (kbd "J") nil)
			(local-set-key (kbd "K") nil)
			(local-set-key (kbd "L") nil)
			(local-set-key (kbd "M") nil)
			(local-set-key (kbd "N") nil)
			(local-set-key (kbd "O") nil)
			(local-set-key (kbd "P") nil)
			(local-set-key (kbd "Q") nil)
			(local-set-key (kbd "R") nil)
			(local-set-key (kbd "S") nil)
			(local-set-key (kbd "T") nil)
			(local-set-key (kbd "U") nil)
			(local-set-key (kbd "V") nil)
			(local-set-key (kbd "W") nil)
			(local-set-key (kbd "X") nil)
			(local-set-key (kbd "Y") nil)
			(local-set-key (kbd "Z") nil)
			(local-set-key (kbd "a") nil)
			(local-set-key (kbd "b") nil)
			(local-set-key (kbd "c") nil)
			(local-set-key (kbd "d") nil)
			(local-set-key (kbd "e") nil)
			(local-set-key (kbd "f") nil)
			(local-set-key (kbd "g") nil)
			(local-set-key (kbd "h") nil)
			(local-set-key (kbd "i") nil)
			(local-set-key (kbd "j") nil)
			(local-set-key (kbd "k") nil)
			(local-set-key (kbd "l") nil)
			(local-set-key (kbd "m") nil)
			(local-set-key (kbd "n") nil)
			(local-set-key (kbd "o") nil)
			(local-set-key (kbd "p") nil)
			(local-set-key (kbd "q") nil)
			(local-set-key (kbd "r") nil)
			(local-set-key (kbd "s") nil)
			(local-set-key (kbd "t") nil)
			(local-set-key (kbd "u") nil)
			(local-set-key (kbd "v") nil)
			(local-set-key (kbd "w") nil)
			(local-set-key (kbd "x") nil)
			(local-set-key (kbd "y") nil)
			(local-set-key (kbd "z") nil)
			(local-set-key (kbd ":a") nil)
			(local-set-key (kbd ":b") nil)
			(local-set-key (kbd ":c") nil)
			(local-set-key (kbd ":d") nil)
			(local-set-key (kbd ":e") nil)
			(local-set-key (kbd ":f") nil)
			(local-set-key (kbd ":g") nil)
			(local-set-key (kbd ":h") nil)
			(local-set-key (kbd ":i") nil)
			(local-set-key (kbd ":j") nil)
			(local-set-key (kbd ":k") nil)
			(local-set-key (kbd ":l") nil)
			(local-set-key (kbd ":m") nil)
			(local-set-key (kbd ":n") nil)
			(local-set-key (kbd ":o") nil)
			(local-set-key (kbd ":p") nil)
			(local-set-key (kbd ":q") nil)
			(local-set-key (kbd ":r") nil)
			(local-set-key (kbd ":s") nil)
			(local-set-key (kbd ":t") nil)
			(local-set-key (kbd ":u") nil)
			(local-set-key (kbd ":v") nil)
			(local-set-key (kbd ":w") nil)
			(local-set-key (kbd ":x") nil)
			(local-set-key (kbd ":y") nil)
			(local-set-key (kbd ":z") nil)
			(local-set-key (kbd ":A") nil)
			(local-set-key (kbd ":B") nil)
			(local-set-key (kbd ":C") nil)
			(local-set-key (kbd ":D") nil)
			(local-set-key (kbd ":E") nil)
			(local-set-key (kbd ":F") nil)
			(local-set-key (kbd ":G") nil)
			(local-set-key (kbd ":H") nil)
			(local-set-key (kbd ":I") nil)
			(local-set-key (kbd ":J") nil)
			(local-set-key (kbd ":K") nil)
			(local-set-key (kbd ":L") nil)
			(local-set-key (kbd ":M") nil)
			(local-set-key (kbd ":N") nil)
			(local-set-key (kbd ":O") nil)
			(local-set-key (kbd ":P") nil)
			(local-set-key (kbd ":Q") nil)
			(local-set-key (kbd ":R") nil)
			(local-set-key (kbd ":S") nil)
			(local-set-key (kbd ":T") nil)
			(local-set-key (kbd ":U") nil)
			(local-set-key (kbd ":V") nil)
			(local-set-key (kbd ":W") nil)
			(local-set-key (kbd ":X") nil)
			(local-set-key (kbd ":Y") nil)
			(local-set-key (kbd ":Z") nil)
			(local-set-key (kbd "M-b") nil)
			(local-set-key (kbd "C-M") nil)
			(local-set-key (kbd "M-q") nil)
			(local-set-key (kbd "+") nil)
			(local-set-key (kbd "M-G") nil)))

(evil-define-key 'normal dired-mode-map (kbd "n") #'find-file)
(evil-define-key 'normal dired-mode-map (kbd "N") #'dired-create-directory)
(evil-define-key 'normal dired-mode-map (kbd "g") #'dired-goto-file)
(evil-define-key 'normal dired-mode-map (kbd "G") #'dired-goto-subdir)
(evil-define-key 'normal dired-mode-map (kbd "c") #'dired-do-copy)
(evil-define-key 'normal dired-mode-map (kbd "<down>") #'dired-next-line)
(evil-define-key 'normal dired-mode-map (kbd "<up>") #'dired-previous-line)
(evil-define-key 'normal dired-mode-map (kbd "<delete>") #'dired-do-delete)
(evil-define-key 'normal dired-mode-map (kbd "<C-delete>") #'dired-flag-file-deletion)
(evil-define-key 'normal dired-mode-map (kbd "C-r") #'dired-do-find-regexp-and-replace)
(evil-define-key 'normal dired-mode-map (kbd "r") #'dired-do-rename)
(evil-define-key 'normal dired-mode-map (kbd "m") #'dired-mark)
(evil-define-key 'normal dired-mode-map (kbd "<return>") #'dired-find-file)
(evil-define-key 'normal dired-mode-map (kbd "<mouse-1>") #'dired-find-file)
(evil-define-key 'normal dired-mode-map (kbd "R") #'dired-do-rename-regexp)
(evil-define-key 'normal dired-mode-map (kbd "v") #'dired-do-rename)
(evil-define-key 'normal dired-mode-map (kbd "p") #'dired-do-print)
(evil-define-key 'normal dired-mode-map (kbd "i") #'image-dired)
(evil-define-key 'normal dired-mode-map (kbd "u") #'dired-unmark)
(evil-define-key 'normal dired-mode-map (kbd "U") #'dired-unmark-all-marks)
(evil-define-key 'normal dired-mode-map (kbd "C-v") #'dired-do-rename)
(evil-define-key 'normal dired-mode-map (kbd "f") #'dired-do-find-regexp)
(evil-define-key 'normal dired-mode-map (kbd "~") #'shell-instead-dired)
(evil-define-key 'normal dired-mode-map (kbd "C-~") #'dired-do-shell-command)
(evil-define-key 'normal dired-mode-map (kbd "C-`") #'dired-do-async-shell-command)
(evil-define-key 'normal dired-mode-map (kbd "s") #'dired-do-compress)
(evil-define-key 'normal dired-mode-map (kbd "b") #'diredp-do-bookmark)

(setq delete-by-moving-to-trash t)

(defalias 'chmod 'dired-do-chmod)
(defalias 'chown 'dired-do-chown)
(defalias 'chowner 'dired-do-chown)
(defalias 'change-owner 'dired-do-chmod)
(defalias 'ch-owner 'dired-do-chmod)
(defalias 'chgrp 'dired-do-chgrp)
(defalias 'chgroup 'dired-do-chgrp)
(defalias 'change-grp 'dired-do-chgrp)
(defalias 'change-group 'dired-do-chgrp)
(defalias 'ch-grp 'dired-do-chgrp)
(defalias 'ch-group 'dired-do-chgrp)
(defalias 'zip 'dired-do-compress)
(defalias 'compress-file 'dired-do-compress)

(use-package dired-filter
  :ensure t
  :config
  (evil-define-key 'normal dired-mode-map (kbd "F") #'dired-filter-load-saved-filters))
(use-package dired-subtree
  :ensure t
  :config
  (evil-define-key 'normal dired-mode-map (kbd "<SPC>") #'dired-subtree-toggle))
;;git
(use-package dired-k
  :ensure t
  :config (add-hook 'dired-initial-position-hook 'dired-k)
  (add-hook 'dired-after-readin-hook #'dired-k-no-revert))
;;one buffer per dired
(el-get-bundle joseph-single-dired
  :url "https://www.emacswiki.org/emacs/download/joseph-single-dired.el")
(eval-after-load 'dired '(progn (require 'joseph-single-dired)))
;;nice highlight
;; (use-package dired-rainbow
;;   :ensure t)
;;image viewer
;; (use-package picpocket
;;   :ensure t
;;   :config
;;   (setq auto-mode-alist
;;		(cl-loop for (regexp . mode) in auto-mode-alist
;;				 if (eq mode 'image-mode)
;;				 collect (cons regexp #'picpocket)
;;				 else
;;				 collect (cons regexp mode)))
;;   (add-hook 'picpocket-mode-hook
;;			(lambda ()
;;			  (local-set-key (kbd "<SPC>") nil)
;;			  (local-set-key (kbd "<backspace>") nil)
;;			  (local-set-key (kbd "A") nil)
;;			  (local-set-key (kbd "B") nil)
;;			  (local-set-key (kbd "C") nil)
;;			  (local-set-key (kbd "D") nil)
;;			  (local-set-key (kbd "E") nil)
;;			  (local-set-key (kbd "F") nil)
;;			  (local-set-key (kbd "G") nil)
;;			  (local-set-key (kbd "H") nil)
;;			  (local-set-key (kbd "I") nil)
;;			  (local-set-key (kbd "J") nil)
;;			  (local-set-key (kbd "K") nil)
;;			  (local-set-key (kbd "L") nil)
;;			  (local-set-key (kbd "M") nil)
;;			  (local-set-key (kbd "N") nil)
;;			  (local-set-key (kbd "O") nil)
;;			  (local-set-key (kbd "P") nil)
;;			  (local-set-key (kbd "Q") nil)
;;			  (local-set-key (kbd "R") nil)
;;			  (local-set-key (kbd "S") nil)
;;			  (local-set-key (kbd "T") nil)
;;			  (local-set-key (kbd "U") nil)
;;			  (local-set-key (kbd "V") nil)
;;			  (local-set-key (kbd "W") nil)
;;			  (local-set-key (kbd "X") nil)
;;			  (local-set-key (kbd "Y") nil)
;;			  (local-set-key (kbd "Z") nil)
;;			  (local-set-key (kbd "a") nil)
;;			  (local-set-key (kbd "b") nil)
;;			  (local-set-key (kbd "c") nil)
;;			  (local-set-key (kbd "d") nil)
;;			  (local-set-key (kbd "e") nil)
;;			  (local-set-key (kbd "f") nil)
;;			  (local-set-key (kbd "g") nil)
;;			  (local-set-key (kbd "h") nil)
;;			  (local-set-key (kbd "i") nil)
;;			  (local-set-key (kbd "j") nil)
;;			  (local-set-key (kbd "k") nil)
;;			  (local-set-key (kbd "l") nil)
;;			  (local-set-key (kbd "m") nil)
;;			  (local-set-key (kbd "n") nil)
;;			  (local-set-key (kbd "o") nil)
;;			  (local-set-key (kbd "p") nil)
;;			  (local-set-key (kbd "q") nil)
;;			  (local-set-key (kbd "r") nil)
;;			  (local-set-key (kbd "s") nil)
;;			  (local-set-key (kbd "t") nil)
;;			  (local-set-key (kbd "u") nil)
;;			  (local-set-key (kbd "v") nil)
;;			  (local-set-key (kbd "w") nil)
;;			  (local-set-key (kbd "x") nil)
;;			  (local-set-key (kbd "y") nil)
;;			  (local-set-key (kbd "z") nil)
;;			  (local-set-key (kbd "C-d") nil)

;;			  (local-set-key (kbd "C-k") #'picpocket-delete-file)
;;			  (local-set-key (kbd "<DEL>") #'picpocket-delete-file)
;;			  (local-set-key (kbd "<C-right>") #'picpocket-next)
;;			  (local-set-key (kbd "C-S-z") #'picpocket-undo)
;;			  (local-set-key (kbd "C-g") #'picpocket-jump)
;;			  (local-set-key (kbd "C-q") #'picpocket-quit)
;;			  (local-set-key (kbd "C-r") #'picpocket-rename)
;;			  (local-set-key (kbd "C-S-c") #'picpocket-copy)
;;			  (local-set-key (kbd "C-S-v") #'picpocket-move)
;;			  (local-set-key (kbd "<C-left>") #'picpocket-previous))))
(use-package async
  :ensure t)
(autoload 'dired-async-mode "dired-async.el" nil t)
(dired-async-mode 1)
(el-get-bundle tumme
  :url "http://repo.or.cz/emacs.git/blob_plain/HEAD:/lisp/image-dired.el")
(load "~/.emacs.d/el-get/tumme/image-dired")
(evil-define-key 'normal dired-mode-map (kbd "o") #'image-dired)
(evil-define-key 'normal dired-mode-map (kbd "O") #'image-dired-display-thumbs)
(add-hook 'image-mode-hook
		  (lambda ()
			(local-set-key (kbd "<SPC>") nil)
			(local-set-key (kbd "<backspace>") nil)
			(local-set-key (kbd "A") nil)
			(local-set-key (kbd "B") nil)
			(local-set-key (kbd "C") nil)
			(local-set-key (kbd "D") nil)
			(local-set-key (kbd "E") nil)
			(local-set-key (kbd "F") nil)
			(local-set-key (kbd "G") nil)
			(local-set-key (kbd "H") nil)
			(local-set-key (kbd "I") nil)
			(local-set-key (kbd "J") nil)
			(local-set-key (kbd "K") nil)
			(local-set-key (kbd "L") nil)
			(local-set-key (kbd "M") nil)
			(local-set-key (kbd "N") nil)
			(local-set-key (kbd "O") nil)
			(local-set-key (kbd "P") nil)
			(local-set-key (kbd "Q") nil)
			(local-set-key (kbd "R") nil)
			(local-set-key (kbd "S") nil)
			(local-set-key (kbd "T") nil)
			(local-set-key (kbd "U") nil)
			(local-set-key (kbd "V") nil)
			(local-set-key (kbd "W") nil)
			(local-set-key (kbd "X") nil)
			(local-set-key (kbd "Y") nil)
			(local-set-key (kbd "Z") nil)
			(local-set-key (kbd "a") nil)
			(local-set-key (kbd "b") nil)
			(local-set-key (kbd "c") nil)
			(local-set-key (kbd "d") nil)
			(local-set-key (kbd "e") nil)
			(local-set-key (kbd "f") nil)
			(local-set-key (kbd "g") nil)
			(local-set-key (kbd "h") nil)
			(local-set-key (kbd "i") nil)
			(local-set-key (kbd "j") nil)
			(local-set-key (kbd "k") nil)
			(local-set-key (kbd "l") nil)
			(local-set-key (kbd "m") nil)
			(local-set-key (kbd "n") nil)
			(local-set-key (kbd "o") nil)
			(local-set-key (kbd "p") nil)
			(local-set-key (kbd "q") nil)
			(local-set-key (kbd "r") nil)
			(local-set-key (kbd "s") nil)
			(local-set-key (kbd "t") nil)
			(local-set-key (kbd "u") nil)
			(local-set-key (kbd "v") nil)
			(local-set-key (kbd "w") nil)
			(local-set-key (kbd "x") nil)
			(local-set-key (kbd "y") nil)
			(local-set-key (kbd "z") nil)
			(local-set-key (kbd "<") nil)
			(local-set-key (kbd ">") nil)
			(local-set-key (kbd "<DEL>") nil)))
(evil-define-key 'normal image-mode-map (kbd "<C-right>") #'image-next-file)
(evil-define-key 'normal image-mode-map (kbd "<up>") #'image-scroll-up)
(evil-define-key 'normal image-mode-map (kbd "<down>") #'image-scroll-down)
(evil-define-key 'normal image-mode-map (kbd "<C-left>") #'image-previous-file)
(evil-define-key 'normal image-mode-map (kbd ".") #'image-next-file)
(evil-define-key 'normal image-mode-map (kbd ",") #'image-previous-file)
(evil-define-key 'normal image-mode-map (kbd "+") #'imagex-sticky-zoom-in)
(evil-define-key 'normal image-mode-map (kbd "-") #'imagex-sticky-zoom-out)
(evil-define-key 'normal image-mode-map (kbd "s") #'imagex-sticky-save-image)
(evil-define-key 'normal image-mode-map (kbd "*") #'imagex-sticky-maximize)
(evil-define-key 'normal image-mode-map (kbd "<") #'imagex-sticky-rotate-left)
(evil-define-key 'normal image-mode-map (kbd ">") #'imagex-sticky-rotate-right)
(evil-define-key 'normal image-mode-map (kbd "/") #'imagex-sticky-restore-original)
(use-package image+
  :ensure t
  :config (eval-after-load 'image '(require 'image+))
  (eval-after-load 'image+ '(imagex-global-sticky-mode 1))
  (eval-after-load 'image+ '(imagex-auto-adjust-mode 1)))
;; (use-package sunrise-commander
;;   :ensure t)

(add-hook 'archive-mode-hook
		  (lambda ()
			(local-set-key (kbd "<") nil)
			(local-set-key (kbd ">") nil)
			(local-set-key (kbd "A") nil)
			(local-set-key (kbd "B") nil)
			(local-set-key (kbd "C") nil)
			(local-set-key (kbd "D") nil)
			(local-set-key (kbd "E") nil)
			(local-set-key (kbd "F") nil)
			(local-set-key (kbd "G") nil)
			(local-set-key (kbd "H") nil)
			(local-set-key (kbd "I") nil)
			(local-set-key (kbd "J") nil)
			(local-set-key (kbd "K") nil)
			(local-set-key (kbd "L") nil)
			(local-set-key (kbd "M") nil)
			(local-set-key (kbd "N") nil)
			(local-set-key (kbd "O") nil)
			(local-set-key (kbd "P") nil)
			(local-set-key (kbd "Q") nil)
			(local-set-key (kbd "R") nil)
			(local-set-key (kbd "S") nil)
			(local-set-key (kbd "T") nil)
			(local-set-key (kbd "U") nil)
			(local-set-key (kbd "V") nil)
			(local-set-key (kbd "W") nil)
			(local-set-key (kbd "X") nil)
			(local-set-key (kbd "Y") nil)
			(local-set-key (kbd "Z") nil)
			(local-set-key (kbd "a") nil)
			(local-set-key (kbd "b") nil)
			(local-set-key (kbd "c") nil)
			(local-set-key (kbd "d") nil)
			(local-set-key (kbd "e") nil)
			(local-set-key (kbd "f") nil)
			(local-set-key (kbd "g") nil)
			(local-set-key (kbd "h") nil)
			(local-set-key (kbd "i") nil)
			(local-set-key (kbd "j") nil)
			(local-set-key (kbd "k") nil)
			(local-set-key (kbd "l") nil)
			(local-set-key (kbd "m") nil)
			(local-set-key (kbd "n") nil)
			(local-set-key (kbd "o") nil)
			(local-set-key (kbd "p") nil)
			(local-set-key (kbd "q") nil)
			(local-set-key (kbd "r") nil)
			(local-set-key (kbd "s") nil)
			(local-set-key (kbd "t") nil)
			(local-set-key (kbd "u") nil)
			(local-set-key (kbd "v") nil)
			(local-set-key (kbd "w") nil)
			(local-set-key (kbd "x") nil)
			(local-set-key (kbd "y") nil)
			(local-set-key (kbd "z") nil)
			(local-set-key (kbd ":a") nil)
			(local-set-key (kbd ":b") nil)
			(local-set-key (kbd ":c") nil)
			(local-set-key (kbd ":d") nil)
			(local-set-key (kbd ":e") nil)
			(local-set-key (kbd ":f") nil)
			(local-set-key (kbd ":g") nil)
			(local-set-key (kbd ":h") nil)
			(local-set-key (kbd ":i") nil)
			(local-set-key (kbd ":j") nil)
			(local-set-key (kbd ":k") nil)
			(local-set-key (kbd ":l") nil)
			(local-set-key (kbd ":m") nil)
			(local-set-key (kbd ":n") nil)
			(local-set-key (kbd ":o") nil)
			(local-set-key (kbd ":p") nil)
			(local-set-key (kbd ":q") nil)
			(local-set-key (kbd ":r") nil)
			(local-set-key (kbd ":s") nil)
			(local-set-key (kbd ":t") nil)
			(local-set-key (kbd ":u") nil)
			(local-set-key (kbd ":v") nil)
			(local-set-key (kbd ":w") nil)
			(local-set-key (kbd ":x") nil)
			(local-set-key (kbd ":y") nil)
			(local-set-key (kbd ":z") nil)
			(local-set-key (kbd ":A") nil)
			(local-set-key (kbd ":B") nil)
			(local-set-key (kbd ":C") nil)
			(local-set-key (kbd ":D") nil)
			(local-set-key (kbd ":E") nil)
			(local-set-key (kbd ":F") nil)
			(local-set-key (kbd ":G") nil)
			(local-set-key (kbd ":H") nil)
			(local-set-key (kbd ":I") nil)
			(local-set-key (kbd ":J") nil)
			(local-set-key (kbd ":K") nil)
			(local-set-key (kbd ":L") nil)
			(local-set-key (kbd ":M") nil)
			(local-set-key (kbd ":N") nil)
			(local-set-key (kbd ":O") nil)
			(local-set-key (kbd ":P") nil)
			(local-set-key (kbd ":Q") nil)
			(local-set-key (kbd ":R") nil)
			(local-set-key (kbd ":S") nil)
			(local-set-key (kbd ":T") nil)
			(local-set-key (kbd ":U") nil)
			(local-set-key (kbd ":V") nil)
			(local-set-key (kbd ":W") nil)
			(local-set-key (kbd ":X") nil)
			(local-set-key (kbd ":Y") nil)
			(local-set-key (kbd ":Z") nil)
			(local-set-key (kbd "M-b") nil)
			(local-set-key (kbd "C-M") nil)
			(local-set-key (kbd "M-q") nil)
			(local-set-key (kbd "+") nil)
			(local-set-key (kbd "C-n") nil)
			(local-set-key (kbd "C-p") nil)))
(evil-define-key 'normal archive-mode-map (kbd "m") #'archive-mark)
(evil-define-key 'normal archive-mode-map (kbd "r") #'archive-rename-entry)
(evil-define-key 'normal archive-mode-map (kbd "U") #'archive-unmark-all-files)
(evil-define-key 'normal archive-mode-map (kbd "k") #'archive-flag-deleted)
(evil-define-key 'normal archive-mode-map (kbd "z") #'archive-undo)
(evil-define-key 'normal archive-mode-map (kbd "u") #'archive-unflag)
(evil-define-key 'normal archive-mode-map (kbd "<delete>") #'dired-do-delete)
(evil-define-key 'normal archive-mode-map (kbd "<C-delete>") #'archive-flag-deleted)
(add-hook 'tar-mode-hook
		  (lambda ()
			(local-set-key (kbd "<") nil)
			(local-set-key (kbd ">") nil)
			(local-set-key (kbd "A") nil)
			(local-set-key (kbd "B") nil)
			(local-set-key (kbd "C") nil)
			(local-set-key (kbd "D") nil)
			(local-set-key (kbd "E") nil)
			(local-set-key (kbd "F") nil)
			(local-set-key (kbd "G") nil)
			(local-set-key (kbd "H") nil)
			(local-set-key (kbd "I") nil)
			(local-set-key (kbd "J") nil)
			(local-set-key (kbd "K") nil)
			(local-set-key (kbd "L") nil)
			(local-set-key (kbd "M") nil)
			(local-set-key (kbd "N") nil)
			(local-set-key (kbd "O") nil)
			(local-set-key (kbd "P") nil)
			(local-set-key (kbd "Q") nil)
			(local-set-key (kbd "R") nil)
			(local-set-key (kbd "S") nil)
			(local-set-key (kbd "T") nil)
			(local-set-key (kbd "U") nil)
			(local-set-key (kbd "V") nil)
			(local-set-key (kbd "W") nil)
			(local-set-key (kbd "X") nil)
			(local-set-key (kbd "Y") nil)
			(local-set-key (kbd "Z") nil)
			(local-set-key (kbd "a") nil)
			(local-set-key (kbd "b") nil)
			(local-set-key (kbd "c") nil)
			(local-set-key (kbd "d") nil)
			(local-set-key (kbd "e") nil)
			(local-set-key (kbd "f") nil)
			(local-set-key (kbd "g") nil)
			(local-set-key (kbd "h") nil)
			(local-set-key (kbd "i") nil)
			(local-set-key (kbd "j") nil)
			(local-set-key (kbd "k") nil)
			(local-set-key (kbd "l") nil)
			(local-set-key (kbd "m") nil)
			(local-set-key (kbd "n") nil)
			(local-set-key (kbd "o") nil)
			(local-set-key (kbd "p") nil)
			(local-set-key (kbd "q") nil)
			(local-set-key (kbd "r") nil)
			(local-set-key (kbd "s") nil)
			(local-set-key (kbd "t") nil)
			(local-set-key (kbd "u") nil)
			(local-set-key (kbd "v") nil)
			(local-set-key (kbd "w") nil)
			(local-set-key (kbd "x") nil)
			(local-set-key (kbd "y") nil)
			(local-set-key (kbd "z") nil)
			(local-set-key (kbd ":a") nil)
			(local-set-key (kbd ":b") nil)
			(local-set-key (kbd ":c") nil)
			(local-set-key (kbd ":d") nil)
			(local-set-key (kbd ":e") nil)
			(local-set-key (kbd ":f") nil)
			(local-set-key (kbd ":g") nil)
			(local-set-key (kbd ":h") nil)
			(local-set-key (kbd ":i") nil)
			(local-set-key (kbd ":j") nil)
			(local-set-key (kbd ":k") nil)
			(local-set-key (kbd ":l") nil)
			(local-set-key (kbd ":m") nil)
			(local-set-key (kbd ":n") nil)
			(local-set-key (kbd ":o") nil)
			(local-set-key (kbd ":p") nil)
			(local-set-key (kbd ":q") nil)
			(local-set-key (kbd ":r") nil)
			(local-set-key (kbd ":s") nil)
			(local-set-key (kbd ":t") nil)
			(local-set-key (kbd ":u") nil)
			(local-set-key (kbd ":v") nil)
			(local-set-key (kbd ":w") nil)
			(local-set-key (kbd ":x") nil)
			(local-set-key (kbd ":y") nil)
			(local-set-key (kbd ":z") nil)
			(local-set-key (kbd ":A") nil)
			(local-set-key (kbd ":B") nil)
			(local-set-key (kbd ":C") nil)
			(local-set-key (kbd ":D") nil)
			(local-set-key (kbd ":E") nil)
			(local-set-key (kbd ":F") nil)
			(local-set-key (kbd ":G") nil)
			(local-set-key (kbd ":H") nil)
			(local-set-key (kbd ":I") nil)
			(local-set-key (kbd ":J") nil)
			(local-set-key (kbd ":K") nil)
			(local-set-key (kbd ":L") nil)
			(local-set-key (kbd ":M") nil)
			(local-set-key (kbd ":N") nil)
			(local-set-key (kbd ":O") nil)
			(local-set-key (kbd ":P") nil)
			(local-set-key (kbd ":Q") nil)
			(local-set-key (kbd ":R") nil)
			(local-set-key (kbd ":S") nil)
			(local-set-key (kbd ":T") nil)
			(local-set-key (kbd ":U") nil)
			(local-set-key (kbd ":V") nil)
			(local-set-key (kbd ":W") nil)
			(local-set-key (kbd ":X") nil)
			(local-set-key (kbd ":Y") nil)
			(local-set-key (kbd ":Z") nil)
			(local-set-key (kbd "M-b") nil)
			(local-set-key (kbd "C-M") nil)
			(local-set-key (kbd "M-q") nil)
			(local-set-key (kbd "+") nil)
			(local-set-key (kbd "C-n") nil)
			(local-set-key (kbd "C-p") nil)))
(evil-define-key 'normal tar-mode-map (kbd "c") #'tar-copy)
(evil-define-key 'normal tar-mode-map (kbd "n") #'tar-new-entry)
(evil-define-key 'normal tar-mode-map (kbd "r") #'tar-rename-entry)
(evil-define-key 'normal tar-mode-map (kbd "u") #'tar-unflag)
(evil-define-key 'normal tar-mode-map (kbd "U") #'tar-clear-modification-flags)
(evil-define-key 'normal tar-mode-map (kbd "k") #'tar-flag-deleted)
(evil-define-key 'normal tar-mode-map (kbd "s") #'tar-untar-buffer)
(evil-define-key 'normal tar-mode-map (kbd "S") #'tar-expunge)
(evil-define-key 'normal tar-mode-map (kbd "<delete>") #'tar-expunge)
(evil-define-key 'normal tar-mode-map (kbd "<C-delete>") #'tar-flag-deleted)
;; (use-package peep-dired
;;   :ensure t)
;;speedbar
;; (use-package neotree
;;   :ensure t
;;   :pin melpa-stable
;;   :config (define-key neotree-mode-map (kbd "C-n") #'neotree-create-node)
;;   (define-key neotree-mode-map (kbd "C-S-c") #'neotree-copy-node)
;;   (define-key neotree-mode-map (kbd "C-r") #'neotree-rename-node)
;;   (define-key neotree-mode-map (kbd "C-u") #'neotree-copy-filepath-to-yank-ring)
;;   (define-key neotree-mode-map (kbd "C-k") #'neotree-delete-node)
;;   (define-key neotree-mode-map (kbd "M-r") #'neotree-refresh)
;;   (define-key neotree-mode-map (kbd "C-f") #'neotree-find)
;;   (define-key neotree-mode-map (kbd "C-g") #'neotree-dir)
;;   (define-key neotree-mode-map (kbd "<return>") #'neotree-change-root)
;;   (define-key neotree-mode-map (kbd "<up>") #'neotree-previous-line)
;;   (define-key neotree-mode-map (kbd "<down>") #'neotree-next-line)
;;   (define-key neotree-mode-map (kbd "<delete>") #'neotree-delete-node)
;;   (define-key neotree-mode-map (kbd "C-q") #'neotree-hide)
;;   (define-key neotree-mode-map (kbd "C-h") #'neotree-hidden-file-toggle)
;;   (define-key neotree-mode-map (kbd "q") nil)
;;   (define-key neotree-mode-map (kbd "i") nil)
;;   (define-key neotree-mode-map (kbd "n") nil)
;;   (define-key neotree-mode-map (kbd "H") nil)
;;   (define-key neotree-mode-map (kbd "D") nil)
;;   (define-key neotree-mode-map (kbd "U") nil)
;;   (define-key neotree-mode-map (kbd "A") nil)
;;   (define-key neotree-mode-map (kbd "s") nil)
;;   (define-key neotree-mode-map (kbd "S") nil)
;;   (define-key neotree-mode-map (kbd "C-c C-c") nil)
;;   (define-key neotree-mode-map (kbd "C-c c") nil)
;;   :bind (("M-s" . neotree-toggle)))
(use-package dired-sidebar
  :ensure t
  :config (define-key evil-normal-state-map (kbd "D") 'dired-sidebar-toggle-with-current-directory))
