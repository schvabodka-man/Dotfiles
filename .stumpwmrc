(in-package :stumpwm)

(set-module-dir "~/stumpwm/contrib")

;; (load "~/quicklisp/setup.lisp")

;; (ql:quickload :clx-truetype)
;; (ql:quickload :xml-emitter)
;; (ql:quickload :dbus)
;; (ql:quickload :ieee-floats)
;; (ql:quickload :flexi-streams)
;; (ql:quickload :cl-xmlspam)
;; (ql:quickload :ironclad)

;; (load-module "ttf-fonts")

;; (xft:cache-fonts)
;; (clx-truetype:cache-fonts)

(set-prefix-key (kbd "s-X"))

(setf *mouse-focus-policy* :sloppy)

(setq *terminal* "termite-tmux")
(setq *shell-program* "/usr/bin/fish")
(setq *browser* "qutebrowser")
(setq *startup-message* "StumpWM loaded!")
(setf *maxsize-border-width* 3)
(setf *normal-border-width* 3)
(set-focus-color "#7cfc00")
(set-unfocus-color "#0e1112")
(set-float-focus-color "#7cfc00")
(set-float-unfocus-color "#0e1112")
(set-win-bg-color "#0e1112")
(gravity :center)
(setf *transient-border-width* 3)
(setf *window-border-style* :thin)
(set-msg-border-width 2)
(set-frame-outline-width 2)
(set-normal-gravity :center)
(setf *window-format* "%m %t --> %c")

(setf *mode-line-foreground-color* "#FFFFFF")
(setf *mode-line-border-color* "#0e1112")
(setf *mode-line-timeout* 15)
(setf *mode-line-pad-y* 0)
(setf *mode-line-border-width* 0)
(setf *mode-line-border-height* 0)
(setf *mode-line-background-color* "#0e1112")
(setf *time-modeline-string* "%a %m-%d %H:%M")
(setf *mode-line-screen-position* :bottom)
(setf *mode-line-frame-position* :bottom)
(setf *group-format* "%s %n")
(setf *window-format* "%s %m %n %20t-%10c")

(setf *suppress-frame-indicator* t)
(setf *suppress-window-placement-indicator* t)

(setf *screen-mode-line-format*
	  (list "%g"))

;; (if (not (head-mode-line (current-head)))
;;	(toggle-mode-line (current-screen) (current-head)))

;;no auto-screensaver
(run-shell-command "xset s off")
(run-shell-command "xset s noblank")
(run-shell-command "xset -dpms")
;;disable clicks on synaptic touchpad
(run-shell-command "synclient TapButton1=0")
(run-shell-command "synclient TapButton2=0")
;;kbd layout
(run-shell-command "setxkbmap -layout us,ru -option grp:alt_caps_toggle")
;;for emacs fonts
(run-shell-command "xrdb-merge")
;;security
(run-shell-command "ssh-agent")
(run-shell-command "gpg-agent --daemon --allow-emacs-pinentry --pinentry-program /usr/bin/pinentry-gtk-2")
;;notifications
(run-shell-command "dunst")
;;auto mounting drives
(run-shell-command "udiskie --use-udisks2")
;;auto hiding cursor
(run-shell-command "unclutter -idle 5")
;;spacefm
(run-shell-command "spacefm -d")
;;emacs instance
(run-shell-command "/usr/bin/emacs --daemon")
;;max brightness by default
(run-shell-command "set -U bright 1.0")
(run-shell-command "set -U coltemp 6500")
(run-shell-command "brightness-default")
(run-shell-command "sct 6500")
;;hledger file location
(run-shell-command "set -U LEDGER_FILE ~/Cloud/Finances/ledger.journal")
;;clipboard management
(run-shell-command "~/bin/clipmenu/clipmenud")
;;wallpaper
(run-shell-command "feh --bg-scale ~/.wallpapers/cyberpunk-city.jpg")
;;bar
(run-shell-command "~/.config/dzen2/dzen2.sh")

(defcommand qutebrowser () ()
  "run qutebrowser"
  (run-or-raise "qutebrowser" '(:title "qutebrowser")))
(defcommand palemoon () ()
  "run qutebrowser"
  (run-or-raise "palemoon" '(:title "Pale Moon")))
(defcommand jetbrains-idea () ()
  "run intellij"
  (run-or-raise "jetbrains-idea" '(:title "Intellij IDEA")))
(defcommand calibre () ()
  "run calibre"
  (run-or-raise "calibre" '(:title "Calibre")))
(defcommand spacefm () ()
  "run spacefm"
  (run-or-raise "spacefm" '(:title "Spacefm")))
(defcommand rambox () ()
  "run rambox"
  (run-or-raise "rambox" '(:title "rambox")))
(defcommand transmission-remote () ()
  "run transmission remote"
  (run-or-raise "transmission-remote-gtk" '(:title "transmission-remote-gtk")))
(defcommand transmission () ()
  "run transmission"
  (run-or-raise "transmission-gtk" '(:title "transmission-gtk")))

(defcommand steam () ()
  "run steam"
  (run-or-raise "steam" '(:title "steam")))

(defcommand uget () ()
  "run uget-gtk"
  (run-or-raise "uget-gtk" '(:title "uget")))
(defcommand transmission () ()
  "run transmission client"
  (run-or-raise "transmission-remote-gtk" '(:title "Transmission")))

(defcommand xfce4-screenshot () ()
  "xfce4 screenshot app"
  (run-or-raise "xfce4-screenshooter" '(:title "xfce4-screenshooter")))

(defcommand fast-screenshot () ()
  "fast screenshot"
  (run-shell-command "~/.config/fish/keybindings/screenshot.fish"))

(defcommand volume-inc () ()
  "increase molume"
  (run-shell-command "amixer -D pulse sset Master 5%+"))
(defcommand volume-dec () ()
  "decrease molume"
  (run-shell-command "amixer -D pulse sset Master 5%-"))
(defcommand volume-inc-small () ()
  "increase volume smally"
  (run-shell-command "amixer -D pulse sset Master 3%+"))
(defcommand volume-dec-small () ()
  "decrease volume smally"
  (run-shell-command "amixer -D pulse sset Master 3%-"))
(defcommand volume-toggle () ()
  "toggle volume"
  (run-shell-command "pactl set-sink-mute 0 toggle"))

(defcommand next-track () ()
  "next-track"
  (run-shell-command "emacsclient --eval \"(emms-next)\""))
(defcommand prev-track () ()
  "prev-track"
  (run-shell-command "emacsclient --eval \"(emms-previous)\""))
(defcommand play-pause () ()
  "prev-track"
  (run-shell-command "emacsclient --eval \"(emms-pause)\""))
(defcommand repeat-track () ()
  "repeat track"
  (run-shell-command "emacsclient --eval \"(emms-replay-track)\""))
(defcommand repeat-playist () ()
  "repeat playlist"
  (run-shell-command "emacsclient --eval \"(emms-repeat-playlist)\""))
(defcommand stop-track () ()
  "stop playing"
  (run-shell-command "emacsclient --eval \"(emms-stop)\""))

(defcommand color-temperature-colder () ()
  "up color temp"
  (run-shell-command "color-temperature-colder"))
(defcommand color-temperature-warmer () ()
  "down color temp"
  (run-shell-command "color-temperature-warmer"))
(defcommand brightness-up () ()
  "brightness-up"
  (run-shell-command "brightness-up"))
(defcommand brightness-down () ()
  "brightness-down"
  (run-shell-command "brightness-down"))

(defcommand emacsclient () ()
  "start emacsclient"
  (run-shell-command "emacsclient -c"))
(defcommand emacsclient-mu4e () ()
  "start emacsclient"
  (run-shell-command "emacsclient -c --eval \"(mu4e)\""))
(defcommand emacsclient-eshell () ()
  "start emacsclient"
  (run-shell-command "emacsclient -c --eval \"(eshell)\""))
(defcommand emacsclient-htop () ()
  "start emacsclient"
  (run-shell-command "emacsclient -c --eval \"(htop)\""))
(defcommand emacsclient-elfeed () ()
  "start emacsclient"
  (run-shell-command "emacsclient -c --eval \"(elfeed)\""))
(defcommand emacsclient-agenda () ()
  "start emacsclient"
  (run-shell-command "emacsclient -c --eval \"(agenda)\""))
(defcommand emacsclient-cal () ()
  "start emacsclient"
  (run-shell-command "emacsclient -c --eval \"(cal)\""))
(defcommand emacsclient-org () ()
  "start emacsclient"
  (run-shell-command "emacsclient -c --eval \"(org-find-file)\""))
(defcommand emacsclient-dired () ()
  "start emacsclient"
  (run-shell-command "emacsclient -c --eval \"(dired-jump)\""))
(defcommand emacsclient-emms () ()
  "start emacsclient"
  (run-shell-command "emacsclient -c --eval \"(emms)\""))
(defcommand emacsclient-transmission () ()
  "start emacsclient"
  (run-shell-command "emacsclient -c --eval \"(transmission)\""))
(defcommand emacsclient-steam () ()
  "start emacsclient"
  (run-shell-command "emacsclient -c --eval \"(steam)\""))
(defcommand emacsclient-deft () ()
  "start emacsclient"
  (run-shell-command "emacsclient -c --eval \"(deft)\""))

(defcommand lock () ()
  "lock screen"
  (run-shell-command "lock"))
(defcommand clear-clipboard () ()
  "clear clipboard"
  (run-shell-command "clear-clipboard"))


(defcommand emacs-terminal () ()
  "open terminal in emacs"
  (run-shell-command "emacsclient -c --eval '(term explicit-shell-file-name)'"))
(defcommand xfce4-terminal () ()
  "start xfce4-terminal"
  (run-shell-command "xfce4-terminal"))
(defcommand xfce4-terminal-tmux () ()
  "start xfce4-terminal"
  (run-shell-command "xfce4-terminal --command '/usr/bin/fish -c start-tmux-session'"))
(defcommand st-tmux () ()
  "start st-terminal"
  (run-shell-command "~/bin/st/st -e \"fish\" \"-c\" \"tmux attach-session -t main; or tmux new-session -s main\""))
(defcommand termite-tmux () ()
  "start termite"
  (run-shell-command "termite-tmux"))
(defcommand urxvt-tmux () ()
  "start urxvt"
  (run-shell-command "urxvtc -e tmux attach-session -t main; or tmux new-session -s main"))

(defcommand rofi-frames () ()
  "look frames at rofi"
  (run-shell-command "rofi -show window -fullscreen"))
(defcommand rofi-run-app () ()
  "look frames at rofi"
  (run-shell-command "rofi -show drun -fullscreen"))
(defcommand rofi-ssh () ()
  "ssh fast connect"
  (run-shell-command "rofi -show ssh -fullscreen"))
(defcommand rofi-pass () ()
  "look pass at rofi"
  (run-shell-command "~/bin/rofi-pass/rofi-pass"))
(defcommand rofi-tmux () ()
  "look pass at rofi"
  (run-shell-command "tmux-rofi"))
(defcommand clipboard-manager () ()
  "run clipmenu"
  (run-shell-command "clipboard"))
(defcommand get-color () ()
  "run grabc"
  (run-shell-command "notify-send -a Selecting color")
  (run-shell-command "grabc | xclip -in -selection clipboard"))

(define-key *top-map* (kbd "XF86AudioLowerVolume") "volume-dec")
(define-key *top-map* (kbd "XF86AudioRaiseVolume") "volume-inc")
(define-key *top-map* (kbd "s-F9") "volume-dec-small")
(define-key *top-map* (kbd "s-F10") "volume-inc-small")
(define-key *top-map* (kbd "XF86AudioMute") "volume-toggle")
(define-key *top-map* (kbd "XF86AudioPrev") "prev-track")
(define-key *top-map* (kbd "XF86AudioNext") "next-track")
(define-key *top-map* (kbd "XF86AudioPlay") "play-pause")
(define-key *top-map* (kbd "s-F7") "stop-track")
(define-key *top-map* (kbd "s-F8") "repeat-track")
(define-key *top-map* (kbd "S-s-F8") "repeat-playist")
(define-key *top-map* (kbd "s-F3") "color-temperature-colder")
(define-key *top-map* (kbd "s-F2") "color-temperature-warmer")
(define-key *top-map* (kbd "XF86MonBrightnessUp") "brightness-up")
(define-key *top-map* (kbd "XF86MonBrightnessDown") "brightness-down")

(define-key *top-map* (kbd "SunPrint_Screen") "xfce4-screenshot")
(define-key *top-map* (kbd "C-SunPrint_Screen") "fast-screenshot")

(grename "1")
(gnewbg "2")
(gnewbg "3")
(gnewbg "4")
(gnewbg "5")
(gnewbg "6")
(gnewbg "7")
(gnewbg "8")
(gnewbg "9")
(gnewbg "0")

(define-key *top-map* (kbd "s-1") "gselect 1")
(define-key *top-map* (kbd "s-2") "gselect 2")
(define-key *top-map* (kbd "s-3") "gselect 3")
(define-key *top-map* (kbd "s-4") "gselect 4")
(define-key *top-map* (kbd "s-5") "gselect 5")
(define-key *top-map* (kbd "s-6") "gselect 6")
(define-key *top-map* (kbd "s-7") "gselect 7")
(define-key *top-map* (kbd "s-8") "gselect 8")
(define-key *top-map* (kbd "s-9") "gselect 9")
(define-key *top-map* (kbd "s-0") "gselect 0")

(define-key *top-map* (kbd "s-,") "gprev")
(define-key *top-map* (kbd "s-.") "gnext")
(define-key *top-map* (kbd "s--") "groups")
(define-key *top-map* (kbd "s-=") "gmove")
(define-key *top-map* (kbd "s-!") "gmove 1")
(define-key *top-map* (kbd "s-@") "gmove 2")
(define-key *top-map* (kbd "s-#") "gmove 3")
(define-key *top-map* (kbd "s-$") "gmove 4")
(define-key *top-map* (kbd "s-%") "gmove 5")
(define-key *top-map* (kbd "s-^") "gmove 6")
(define-key *top-map* (kbd "s-&") "gmove 7")
(define-key *top-map* (kbd "s-*") "gmove 8")
(define-key *top-map* (kbd "s-(") "gmove 9")
(define-key *top-map* (kbd "s-)") "gmove 0")

(define-key *top-map* (kbd "s-b") "qutebrowser")
(define-key *top-map* (kbd "s-w") "rofi-frames")
(define-key *top-map* (kbd "C-s-RET") "rofi-tmux")
(define-key *top-map* (kbd "s-x") "rofi-run-app")
(define-key *top-map* (kbd "s-RET") "emacsclient")
(define-key *top-map* (kbd "s-quoteleft") "xfce4-terminal-tmux")
(define-key *top-map* (kbd "s-m") "emacsclient-mu4e")
(define-key *top-map* (kbd "s-r") "rambox")
(define-key *top-map* (kbd "s-e") "emacsclient-elfeed")
(define-key *top-map* (kbd "s-E") "emacsclient-emms")
(define-key *top-map* (kbd "s-O") "emacsclient-deft")
(define-key *top-map* (kbd "s-o") "emacsclient-org")
(define-key *top-map* (kbd "s-a") "emacsclient-agenda")
(define-key *top-map* (kbd "s-A") "emacsclient-cal")
(define-key *top-map* (kbd "s-d") "spacefm")
(define-key *top-map* (kbd "s-D") "emacsclient-dired")
(define-key *top-map* (kbd "s-T") "transmission")
(define-key *top-map* (kbd "s-t") "transmission-remote")
(define-key *top-map* (kbd "s-s") "rofi-ssh")
(define-key *top-map* (kbd "s-S") "emacsclient-steam")
(define-key *top-map* (kbd "s-l") "lock")
(define-key *top-map* (kbd "s-p") "rofi-pass")
(define-key *top-map* (kbd "s-v") "clipboard-manager")
(define-key *top-map* (kbd "s-V") "clear-clipboard")
(define-key *top-map* (kbd "s-c") "get-color")
;; (define-key *top-map* (kbd "s-r") "loadrc")
(define-key *top-map* (kbd "s-W") "windowlist")

(define-key *top-map* (kbd "s-n") "hsplit")
(define-key *top-map* (kbd "s-N") "vsplit")
(define-key *top-map* (kbd "s-q") "delete-window")
(define-key *top-map* (kbd "s-TAB") "gother")
(define-key *top-map* (kbd "S-ISO_Left_Tab") "fother")
(define-key *top-map* (kbd "s-Q") "remove-split")
(define-key *top-map* (kbd "s-f") "fullscreen")
(define-key *top-map* (kbd "s-\\") "balance-frames")
(define-key *top-map* (kbd "s-Up") "move-focus up")
(define-key *top-map* (kbd "s-Down") "move-focus down")
(define-key *top-map* (kbd "s-Left") "move-focus left")
(define-key *top-map* (kbd "s-Right") "move-focus Right")
(define-key *top-map* (kbd "S-s-Up") "move-window up")
(define-key *top-map* (kbd "S-s-Down") "move-window down")
(define-key *top-map* (kbd "S-s-Left") "move-window left")
(define-key *top-map* (kbd "S-s-Right") "move-window Right")
(define-key *top-map* (kbd "C-s-Up") "resize 0 10")
(define-key *top-map* (kbd "C-s-Down") "resize 0 -10")
(define-key *top-map* (kbd "C-s-Left") "resize -10 0")
(define-key *top-map* (kbd "C-s-Right") "resize 10 0")
(define-key *top-map* (kbd "s-~") "eval")
